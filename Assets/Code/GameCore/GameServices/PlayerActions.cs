//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Resources/PlayerActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerActions"",
    ""maps"": [
        {
            ""name"": ""Main"",
            ""id"": ""1b5f3ad5-4b4b-4736-8500-22baca512137"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""1836a7fa-9953-4f9f-a4e3-03a16b364ebb"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""ca7737e7-e699-4619-9a96-958386a42c45"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpeedUp"",
                    ""type"": ""Button"",
                    ""id"": ""337f6edf-82ca-491c-99e8-585ad28a35ba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LaunchFireball"",
                    ""type"": ""Button"",
                    ""id"": ""22501348-7371-4bce-8f40-3df1281c3037"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PickColor"",
                    ""type"": ""Button"",
                    ""id"": ""1bafa68c-ddec-41f1-836b-4cc1e289ddfb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GrayColor"",
                    ""type"": ""Button"",
                    ""id"": ""7a0c1f7b-91dd-452e-9fa5-a3c029556ff5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RedColor"",
                    ""type"": ""Button"",
                    ""id"": ""41c3e5be-2b05-482a-914f-c3acfa13cabc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GreenColor"",
                    ""type"": ""Button"",
                    ""id"": ""4a3724b1-a529-4f2e-952a-22e78f1299b4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BlueColor"",
                    ""type"": ""Button"",
                    ""id"": ""3cadcd20-3e01-4fe4-a5f3-189c7afdfbaf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Erase"",
                    ""type"": ""Button"",
                    ""id"": ""a10d7510-8893-42ca-a7ef-1184df63a026"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""71b4e93c-8a63-4c74-8d56-5326b2b55f00"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""OnScreenTap"",
                    ""type"": ""Button"",
                    ""id"": ""f54b4d27-bcc3-4cc3-9af5-58a7280a7308"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e91e7d75-1701-4a98-934f-90107e229747"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LaunchFireball"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1efbadf8-4547-44a0-8d69-2ac279e1ade4"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Erase"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""936d4267-3786-4623-a1a4-eef34a7f2429"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD [Keyboard]"",
                    ""id"": ""85b025ba-e177-48bf-be0f-963659e1c020"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""65858bc7-e8e2-4c51-9577-cfa4bd46ff3e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""d30937f4-ddfb-40e9-b1fc-9dfd337925a9"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""86e900d4-a8e7-4ba2-8a01-7a3df9f31178"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""dfc348ae-ef2a-4658-93ec-dbdb180e9e0c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows [Keyboard]"",
                    ""id"": ""e1737440-5497-4785-a092-1fc5194ac305"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""68465b04-cf1a-40fd-acc0-392e7611b678"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""626693c2-fe03-4d64-b9ba-5a09573efcb8"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5ed39390-009d-4b4b-8ffd-896baee454fd"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""15e3b452-bb56-4487-913b-fd315a312819"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2e747959-29e0-45bc-a419-9b9163b3dbf8"",
                    ""path"": ""<Touchscreen>/primaryTouch/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OnScreenTap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5bc76b27-aadc-47bc-9f64-ddd4324a4e04"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6a8c787-f975-48ce-a142-d9f0497fcd09"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpeedUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb2a5688-7ab0-4389-95c5-148184ef5f5c"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c56033c7-9cff-4425-904c-fc3845927c45"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PickColor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""628734d9-6d56-47eb-aa14-931ae110d746"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GrayColor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9376fe5-2fba-44d3-a855-6be8bddce37f"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RedColor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8b14e22c-2e50-4c85-865a-53d4546b43a2"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GreenColor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b7acf30-778f-4475-9c33-e1b1937b7259"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BlueColor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Main
        m_Main = asset.FindActionMap("Main", throwIfNotFound: true);
        m_Main_Move = m_Main.FindAction("Move", throwIfNotFound: true);
        m_Main_Jump = m_Main.FindAction("Jump", throwIfNotFound: true);
        m_Main_SpeedUp = m_Main.FindAction("SpeedUp", throwIfNotFound: true);
        m_Main_LaunchFireball = m_Main.FindAction("LaunchFireball", throwIfNotFound: true);
        m_Main_PickColor = m_Main.FindAction("PickColor", throwIfNotFound: true);
        m_Main_GrayColor = m_Main.FindAction("GrayColor", throwIfNotFound: true);
        m_Main_RedColor = m_Main.FindAction("RedColor", throwIfNotFound: true);
        m_Main_GreenColor = m_Main.FindAction("GreenColor", throwIfNotFound: true);
        m_Main_BlueColor = m_Main.FindAction("BlueColor", throwIfNotFound: true);
        m_Main_Erase = m_Main.FindAction("Erase", throwIfNotFound: true);
        m_Main_Back = m_Main.FindAction("Back", throwIfNotFound: true);
        m_Main_OnScreenTap = m_Main.FindAction("OnScreenTap", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Main
    private readonly InputActionMap m_Main;
    private List<IMainActions> m_MainActionsCallbackInterfaces = new List<IMainActions>();
    private readonly InputAction m_Main_Move;
    private readonly InputAction m_Main_Jump;
    private readonly InputAction m_Main_SpeedUp;
    private readonly InputAction m_Main_LaunchFireball;
    private readonly InputAction m_Main_PickColor;
    private readonly InputAction m_Main_GrayColor;
    private readonly InputAction m_Main_RedColor;
    private readonly InputAction m_Main_GreenColor;
    private readonly InputAction m_Main_BlueColor;
    private readonly InputAction m_Main_Erase;
    private readonly InputAction m_Main_Back;
    private readonly InputAction m_Main_OnScreenTap;
    public struct MainActions
    {
        private @PlayerActions m_Wrapper;
        public MainActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Main_Move;
        public InputAction @Jump => m_Wrapper.m_Main_Jump;
        public InputAction @SpeedUp => m_Wrapper.m_Main_SpeedUp;
        public InputAction @LaunchFireball => m_Wrapper.m_Main_LaunchFireball;
        public InputAction @PickColor => m_Wrapper.m_Main_PickColor;
        public InputAction @GrayColor => m_Wrapper.m_Main_GrayColor;
        public InputAction @RedColor => m_Wrapper.m_Main_RedColor;
        public InputAction @GreenColor => m_Wrapper.m_Main_GreenColor;
        public InputAction @BlueColor => m_Wrapper.m_Main_BlueColor;
        public InputAction @Erase => m_Wrapper.m_Main_Erase;
        public InputAction @Back => m_Wrapper.m_Main_Back;
        public InputAction @OnScreenTap => m_Wrapper.m_Main_OnScreenTap;
        public InputActionMap Get() { return m_Wrapper.m_Main; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainActions set) { return set.Get(); }
        public void AddCallbacks(IMainActions instance)
        {
            if (instance == null || m_Wrapper.m_MainActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MainActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @SpeedUp.started += instance.OnSpeedUp;
            @SpeedUp.performed += instance.OnSpeedUp;
            @SpeedUp.canceled += instance.OnSpeedUp;
            @LaunchFireball.started += instance.OnLaunchFireball;
            @LaunchFireball.performed += instance.OnLaunchFireball;
            @LaunchFireball.canceled += instance.OnLaunchFireball;
            @PickColor.started += instance.OnPickColor;
            @PickColor.performed += instance.OnPickColor;
            @PickColor.canceled += instance.OnPickColor;
            @GrayColor.started += instance.OnGrayColor;
            @GrayColor.performed += instance.OnGrayColor;
            @GrayColor.canceled += instance.OnGrayColor;
            @RedColor.started += instance.OnRedColor;
            @RedColor.performed += instance.OnRedColor;
            @RedColor.canceled += instance.OnRedColor;
            @GreenColor.started += instance.OnGreenColor;
            @GreenColor.performed += instance.OnGreenColor;
            @GreenColor.canceled += instance.OnGreenColor;
            @BlueColor.started += instance.OnBlueColor;
            @BlueColor.performed += instance.OnBlueColor;
            @BlueColor.canceled += instance.OnBlueColor;
            @Erase.started += instance.OnErase;
            @Erase.performed += instance.OnErase;
            @Erase.canceled += instance.OnErase;
            @Back.started += instance.OnBack;
            @Back.performed += instance.OnBack;
            @Back.canceled += instance.OnBack;
            @OnScreenTap.started += instance.OnOnScreenTap;
            @OnScreenTap.performed += instance.OnOnScreenTap;
            @OnScreenTap.canceled += instance.OnOnScreenTap;
        }

        private void UnregisterCallbacks(IMainActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @SpeedUp.started -= instance.OnSpeedUp;
            @SpeedUp.performed -= instance.OnSpeedUp;
            @SpeedUp.canceled -= instance.OnSpeedUp;
            @LaunchFireball.started -= instance.OnLaunchFireball;
            @LaunchFireball.performed -= instance.OnLaunchFireball;
            @LaunchFireball.canceled -= instance.OnLaunchFireball;
            @PickColor.started -= instance.OnPickColor;
            @PickColor.performed -= instance.OnPickColor;
            @PickColor.canceled -= instance.OnPickColor;
            @GrayColor.started -= instance.OnGrayColor;
            @GrayColor.performed -= instance.OnGrayColor;
            @GrayColor.canceled -= instance.OnGrayColor;
            @RedColor.started -= instance.OnRedColor;
            @RedColor.performed -= instance.OnRedColor;
            @RedColor.canceled -= instance.OnRedColor;
            @GreenColor.started -= instance.OnGreenColor;
            @GreenColor.performed -= instance.OnGreenColor;
            @GreenColor.canceled -= instance.OnGreenColor;
            @BlueColor.started -= instance.OnBlueColor;
            @BlueColor.performed -= instance.OnBlueColor;
            @BlueColor.canceled -= instance.OnBlueColor;
            @Erase.started -= instance.OnErase;
            @Erase.performed -= instance.OnErase;
            @Erase.canceled -= instance.OnErase;
            @Back.started -= instance.OnBack;
            @Back.performed -= instance.OnBack;
            @Back.canceled -= instance.OnBack;
            @OnScreenTap.started -= instance.OnOnScreenTap;
            @OnScreenTap.performed -= instance.OnOnScreenTap;
            @OnScreenTap.canceled -= instance.OnOnScreenTap;
        }

        public void RemoveCallbacks(IMainActions instance)
        {
            if (m_Wrapper.m_MainActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMainActions instance)
        {
            foreach (var item in m_Wrapper.m_MainActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MainActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MainActions @Main => new MainActions(this);
    public interface IMainActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnSpeedUp(InputAction.CallbackContext context);
        void OnLaunchFireball(InputAction.CallbackContext context);
        void OnPickColor(InputAction.CallbackContext context);
        void OnGrayColor(InputAction.CallbackContext context);
        void OnRedColor(InputAction.CallbackContext context);
        void OnGreenColor(InputAction.CallbackContext context);
        void OnBlueColor(InputAction.CallbackContext context);
        void OnErase(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
        void OnOnScreenTap(InputAction.CallbackContext context);
    }
}
